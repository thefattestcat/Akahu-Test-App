import type { AxiosResponse, AxiosError } from 'axios';
export declare type Protocol = 'http' | 'https';
/**
 * Build a URL from constituent components.
 */
export declare function buildUrl({ protocol, host, port, path, query }: {
    protocol: Protocol;
    host: string;
    port?: number;
    path?: string;
    query?: Record<string, string | undefined>;
}): string;
export declare function pick<T extends Record<string, any>>(obj: T, ...props: string[]): Partial<T>;
/**
 * Axios error interceptor to retry on network failures.
 * Dormant by default - is activated by including `retries` in the axios config.
 */
export declare function axiosRetryOnNetworkError(error: AxiosError): Promise<AxiosResponse>;
export declare const isBrowser: () => boolean;
export declare const isNode: () => boolean;
export declare const isReactNative: () => boolean;
